

#include <stdio.h>
#include "SDL/SDL.h"
#include <SDL/SDL_image.h>
#include <SDL/SDL_mixer.h>
#include "fonctions.h"

void init_entite(entite *p1,entite *p2) 
{
SDL_Surface *screen;
SDL_Surface *image;
SDL_Surface *entite;
SDL_Rect positionecran;
SDL_Rect positionentite;
SDL_Event event;

char pause;

 (p1->positionentite.x)=750;
 (p1->positionentite.y)=200;
 (p1->val1)=0 ;
 (p1->val2)=3 ;
 
 
}






int affichage (char pause )
{



if(SDL_Init(SDL_INIT_VIDEO)!=0){
printf("Unable to initialize SDL:%s\n",SDL_GetError());
return 1;
}
SDL_Surface *screen;
SDL_Surface *image;
SDL_Surface *personnage;
SDL_Rect positionecran;
SDL_Rect positionpersonnage;
SDL_Event event;
screen=SDL_SetVideoMode(600,400,32,SDL_HWSURFACE|SDL_DOUBLEBUF);
if (screen==NULL){
printf("Unable to set 600x400 video: %s\n",SDL_GetError());
return 1;
}

image =SDL_LoadBMP("background.bmp");

if (image==NULL){
printf("Unable to load bitmap: %s\n",SDL_GetError());
return 1;
}
personnage = IMG_Load("2.png");
positionecran.x = 0;
positionecran.y = 0;
positionpersonnage.x = 10;
positionpersonnage.y = 20;
if (personnage==NULL){
printf("Unable to load png: %s\n",SDL_GetError());
return 1;
}

int done =1 ;
while(done)
{


SDL_BlitSurface(image,NULL,screen,&positionecran);

SDL_BlitSurface(personnage,NULL,screen,&positionpersonnage);

SDL_Flip(screen);

}

SDL_FreeSurface(image);
SDL_FreeSurface(personnage);
pause= getchar();
return 0;
}





int clavier (char pause ){

if(SDL_Init(SDL_INIT_VIDEO)!=0){
printf("Unable to initialize SDL:%s\n",SDL_GetError());
return 1;
}
SDL_Surface *screen;
SDL_Surface *image;
SDL_Surface *personnage;
SDL_Rect positionecran;
SDL_Rect positionpersonnage;
SDL_Event event;
screen=SDL_SetVideoMode(600,400,32,SDL_HWSURFACE|SDL_DOUBLEBUF);
if (screen==NULL){
printf("Unable to set 600x400 video: %s\n",SDL_GetError());
return 1;
}

image =SDL_LoadBMP("background.bmp");

if (image==NULL){
printf("Unable to load bitmap: %s\n",SDL_GetError());
return 1;
}
personnage = IMG_Load("2.png");
positionecran.x = 0;
positionecran.y = 0;
positionpersonnage.x = 100;
positionpersonnage.y = 260;
if (personnage==NULL){
printf("Unable to load png: %s\n",SDL_GetError());
return 1;
}

int done =1 ;
while(done)
{


SDL_BlitSurface(image,NULL,screen,&positionecran);

SDL_BlitSurface(personnage,NULL,screen,&positionpersonnage);

while(SDL_PollEvent(&event))
{
switch(event.type)
{
case SDL_QUIT:
done= 0;
break;

case SDL_KEYDOWN:
 { switch (event.key.keysym.sym) {
   case SDLK_ESCAPE:
   done =0;
   break;
   case SDLK_s:
     positionpersonnage.y=positionpersonnage.y+10;
     break;
   case SDLK_z:
   positionpersonnage.y=positionpersonnage.y-10;
     break;
   case SDLK_d:
   positionpersonnage.x=positionpersonnage.x+10;
  break;
   case SDLK_q:
   positionpersonnage.x=positionpersonnage.x-10;
    break;}
 }




}
}



SDL_Flip(screen);

}


SDL_FreeSurface(image);
SDL_FreeSurface(personnage);
pause= getchar();
return 0;
}










int souri  (char pause  )
{

  
if(SDL_Init(SDL_INIT_VIDEO)!=0){
printf("Unable to initialize SDL:%s\n",SDL_GetError());
return 1;
}
SDL_Surface *screen;
SDL_Surface *image;
SDL_Surface *personnage;
SDL_Rect positionecran;
SDL_Rect positionpersonnage; 

screen=SDL_SetVideoMode(600,400,32,SDL_HWSURFACE|SDL_DOUBLEBUF);
if (screen==NULL){
printf("Unable to set 600x400 video: %s\n",SDL_GetError());
return 1;
}

image =SDL_LoadBMP("background.bmp");

if (image==NULL){
printf("Unable to load bitmap: %s\n",SDL_GetError());
return 1;
}
personnage = IMG_Load("2.png");
positionecran.x = 0;
positionecran.y = 0;
positionpersonnage.x = 100;
positionpersonnage.y = 260;
if (personnage==NULL){
printf("Unable to load png: %s\n",SDL_GetError());
return 1;
}

int done =1 ;
while(done)
{


SDL_BlitSurface(image,NULL,screen,&positionecran);

SDL_BlitSurface(personnage,NULL,screen,&positionpersonnage);

while(SDL_PollEvent(&event))
{
switch(event.type)
{
case SDL_QUIT:
done= 0;
break;


 
case SDL_MOUSEBUTTONDOWN:

if(event.button.button==SDL_BUTTON_LEFT)
{ 

        

case SDL_MOUSEMOTION:
            positionpersonnage.x = event.motion.x;
            positionpersonnage.y = event.motion.y;
            break;


case SDL_MOUSEBUTTONUP:
            // On arrête le programme si on a fait un clic droit
            if ( event.button.button == SDL_BUTTON_RIGHT )
                done = 0;
            else {
                positionpersonnage.x = event.button.x;
                positionpersonnage.y = event.button.y;
                }

            break;
break;
}
}


}


SDL_Flip(screen);

}


SDL_FreeSurface(image);
SDL_FreeSurface(personnage);
pause= getchar();
return 0;
}


bool Collision(Cercle C1,Cercle C2)
{
   int d2 = (C1.x-C2.x)*(C1.x-C2.x) + (C1.y-C2.y)*(C1.y-C2.y);
   if (d2 > (C1.rayon + C2.rayon)*(C1.rayon + C2.rayon))
      return false;
   else
      return true;
}

